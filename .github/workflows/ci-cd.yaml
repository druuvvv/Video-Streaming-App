name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger the workflow on push to the master branch
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.6.0'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t druvvv/my-node-app .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Push Docker image
      run: docker push druvvv/my-node-app
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        # Save the SSH private key to a file
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        # Deploy via SSH
        ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
          # Start Docker service if not already running
          sudo systemctl start docker

          # Stop any running containers if they exist
          docker stop druvvv/my-node-app || true
          docker rm druvvv/my-node-app || true
          
          # Pull the latest image from Docker Hub
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/druvvv/my-node-app:latest
          
          # Run the new container
          docker run -d --name druvvv/my-node-app -p 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/druvvv/my-node-app:latest
        EOF

    - name: Clean up
      run: rm -f private_key.pem
